#Palindrome

 public static boolean palindrome(String s){
        int count = s.length()-1;
        for(int i =0;i<s.length();i++){
            if(s.charAt(i)==s.charAt(count)){
                count--;
                continue;
            }else{
                return false;
            }
        }
        return true;
    }

public static void palindrome(String s){
		String reverse = "";
		for(int i =s.length()-1;i>=0;i--){
			reverse += s.charAt(i);
		}
		if(s.equals(reverse)){
			System.out.println("s is Palindrome");
		}
	}

#FirstNonRepetive
public static void nonRep(String s){
        for(int i=0;i<s.length();i++){
            char ch = s.charAt(i);
            if(s.indexOf(ch)==s.lastIndexOf(ch)){
                System.out.println(ch);
                break;
            }
        }
    }


#Remove duplicates of ArrayList
public static ArrayList<Integer> rmDups(ArrayList<Integer> arr){
        Set<Integer> hset = new LinkedHashSet<>();
        hset.addAll(arr);
        arr.clear();
        arr.addAll(hset);
        return arr;

    }
  
 #Find the missing number from 1-10 in a single pass
 public class MissingNumber{
   public static void main(String[] args){
    int[] ar = {1,2,3,4,5,7,8,9,10};
    System.out.println(missingNum(ar)); 	
   }

   static int missingNum(int[] arr){
    int n = arr.length+1;
    int total = (n*(n+1))/2;
    for(int i = 0;i<n-1;i++){
     total -= arr[i];
    }
    return total;
   }
}


